demo()
;
help()
library(rmysql)
library(RMySQL)
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.uscc.edu");
ucscDb <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu");
allTables <dbListTables(hg19)
allTables <- dbListTables(hg19)
result <- dbShowQuery(ucscDb, "show tables;");
result <- dbGetQuery(ucscDb, "show tables;");
hg19 <- dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu",db="hg19");
allTables <-dbListTables(hg19)
allTables
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "SELECT count(*) FROM affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
biocLite("BiocUpgrade")
biocLite("rhdf5")
library(rhdf5)
created = h5createFile("example.h5")
created
created = h5createGroup("example.h5", "foo")
h5ls("example.h5")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "72bc7643f03a5f979605a27aaf758f9320e19978")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages("httpuv")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", "72bc7643f03a5f979605a27aaf758f9320e19978")
Sys.setenv(GITHUB_CONSUMER_SECRET = "72bc7643f03a5f979605a27aaf758f9320e19978")
myapp <- oauth_app("github")
Sys.setenv(GITHUB_CONSUMER_SECRET = "72bc7643f03a5f979605a27aaf758f9320e19978")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", "40761090657080584088")
Sys.setenv(GITHUB_CONSUMER_SECRET = "72bc7643f03a5f979605a27aaf758f9320e19978")
myapp <- oauth_app("github", "40761090657080584088")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("htts://api.github.com/rate_limit", github_token)
install.packages("seewave")
?seewave
??seewave
library(seewave)
install.packages(c("fftw","tuneR","rgl","rpanel"), repos="http://cran.at.r-project.org/")
install.packages("seewave")
install.packages(c("fftw","tuneR","rgl","rpanel"), repos="http://cran.at.r-project.org/")
install.packages("BWidget")
install.packages(c("fftw","tuneR","rgl","rpanel"), repos="http://cran.at.r-project.org/")
install.packages("seewave")
?seewave
install.packages("sound")
install.packages("sounds")
library(seewave);
data(pellucens)
spectro(pellucens)
clear
clear()
download.file("http://sounds.myspecies.info/sites/sounds.myspecies.info/files/991_4_Gryllus_campestris_142r4.wav" destfile="chorthippus.wav")
download.file("http://sounds.myspecies.info/sites/sounds.myspecies.info/files/991_4_Gryllus_campestris_142r4.wav", destfile="chorthippus.wav")
f <- 22050
spectro(alauda, f=f, ovlp=75, zp=8, palette=rev.gray.colors.1, scale=FALSE)
par(new=TRUE)
dfreq(alauda, f=f, ovlp=50, threshold=6, type="l", col="red", lwd=2)
alauda <- readWave("chorthippus.wav")
library(seewave)
alauda <- readWave("chorthippus.wav")
library(tuneR)
alauda <- readWave("chorthippus.wav")
f <- 22050
spectro(alauda, f=f, ovlp=75, zp=8, palette=rev.gray.colors.1, scale=FALSE)
par(new=TRUE)
dfreq(alauda, f=f, ovlp=50, threshold=6, type="l", col="red", lwd=2)
spectro(alauda)
alauda <- readWave("chorthippus.wav")
spectro(alauda)
library(tuneR, seewave)
alauda <- readWave("chorthippus.wav")
spectro(alauda)
download.file("http://rug.mnhn.fr/seewave/WAV/alauda.wav", destfile="alauda.wav")
alauda<-readWave("alauda.wav")
f <- 22050
spectro(alauda, f=f, ovlp=75, zp=8, palette=rev.gray.colors.1, scale=FALSE)
par(new=TRUE)
dfreq(alauda, f=f, ovlp=50, threshold=6, type="l", col="red", lwd=2)
download.file("http://rug.mnhn.fr/seewave/WAV/alauda.wav", destfile="alauda.wav")
alauda<-readWave("alauda.wav")
f <- 22050
spectro(alauda, f=f, ovlp=75, zp=8, palette=rev.gray.colors.1, scale=FALSE)
par(new=TRUE)
dfreq(alauda, f=f, ovlp=50, threshold=6, type="l", col="red", lwd=2)
library(tuneR, seewave)
download.file("http://rug.mnhn.fr/seewave/WAV/alauda.wav", destfile="alauda.wav")
alauda<-readWave("alauda.wav")
f <- 22050
spectro(alauda, f=f, ovlp=75, zp=8, palette=rev.gray.colors.1, scale=FALSE)
par(new=TRUE)
dfreq(alauda, f=f, ovlp=50, threshold=6, type="l", col="red", lwd=2)
library(tuneR, seewave)
download.file("http://rug.mnhn.fr/seewave/WAV/alauda.wav", destfile="alauda.wav")
alauda<-readWave("alauda.wav")
f <- 22050
spectro(alauda, f=f, ovlp=75, zp=8, palette=rev.gray.colors.1, scale=FALSE)
par(new=TRUE)
dfreq(alauda, f=f, ovlp=50, threshold=6, type="l", col="red", lwd=2)
source('~/.active-rstudio-document')
install.packages(tuneR)
install.packages("tuneR")
install.packages("seewave");
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
help(spectro)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
head(spectro)
help(spectro)
help(plot)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
}
source('~/.active-rstudio-document')
clear
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
help(spectro)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations();
View(a)
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations();
View(a)
?sub
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations();
a <- bioacoustica.getAnnotations();
a <- bioacoustica.getAnnotations();
a <- bioacoustica.getAnnotations("Heteropteryx dilatata");
a <- bioacoustica.getAnnotations("Heteropteryx dilatata");
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations();
a <- bioacoustica.getAnnotations("Heteropteryx dilatata");
a <- bioacoustica.getAnnotations(species="Heteropteryx dilatata");
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(species="Heteropteryx dilatata");
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(species="Heteropteryx dilatata");
a <- bioacoustica.getAnnotations();
?!
;
?not
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations();
a <- bioacoustica.getAnnotations(species="Heteropteryx dilatata");
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(species="Heteropteryx dilatata");
?print
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(species="Heteropteryx dilatata");
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(species="Heteropteryx dilatata");
a <- bioacoustica.getAnnotations();
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations();
a <- bioacoustica.getAnnotations(type="Threat Response");
a <- bioacoustica.getAnnotations(type="Threat Response");
View(a)
source('~/Scripts/bioacousticaR/bioacoustica.R')
source('~/Scripts/bioacousticaR/bioacoustica.R')
source('~/Scripts/bioacousticaR/bioacoustica.R')
allowed <- bioacoustica.listTypes();
View(allowed)
type(allowed)
allowed
?read.csv
sapply(bioacoustica.listTypes(), match, "Call", nomatch=0)
sapply(bioacoustica.listTypes(), match, "Call")
sapply(bioacoustica.listTypes(), match, "Call", nomatch=0)
?sum
sapply(bioacoustica.listTypes(), match, "Call", nomatch=0, na.rm=TRUE)
sum(sapply(bioacoustica.listTypes(), match, "Call", nomatch=0))
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(type="Threat Response");
a <- bioacoustica.getAnnotations(type="Threat Responses");
source('~/Scripts/bioacousticaR/bioacoustica.R')
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(type="Threat Responses");
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(type="Threat Responses");
?stop
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(type="Threat Responses");
source('~/Scripts/bioacousticaR/bioacoustica.R')
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(type="Threat Responses");
a <- bioacoustica.getAnnotations(taxon="Heteropteryx dilatata");
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(taxon="Heteropteryx dilatata");
a <- bioacoustica.getAnnotations(taxon="Heteropteryx+dilatata");
a <- bioacoustica.getAnnotations(taxon="Heteropteryx");
b <- bioacoustica.listTaxa()
b <- bioacoustica.listTaxa()
a <- bioacoustica.getAnnotations(taxon="Heteropteryx");
a <- bioacoustica.getAnnotations(taxon="Heteropteryx");
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(taxon="Heteropteryx");
a <- bioacoustica.getAnnotations(taxon="Heteropteryx");
a <- bioacoustica.getAnnotations(taxon="Heteropteryx dilatata");
a <- bioacoustica.getAnnotations(taxon="Heteropteryx", skipcheck=TRUE);
source('~/Scripts/bioacousticaR/bioacoustica.R')
a <- bioacoustica.getAnnotations(taxon="Heteropteryx", skipcheck=TRUE);
a <- bioacoustica.getAnnotations(taxon="Heteropteryx", skipcheck=FALSE);
?getURL
source('~/Scripts/bioacousticaR/bioacoustica.R')
source('~/Scripts/bioacousticaR/bioacoustica.R')
c <- bioacoustica.listTaxa();
source('~/Scripts/bioacousticaR/bioacoustica.R')
d <- bioacoustica.getAnnotations(taxon="Gryllotalpa gryllotalpa");
View(d)
d <- bioacoustica.getAnnotations(taxon="Gryllotalpa gryllotalpa", type="Call");
setwd("~/sketchbook/AquaticInsectLightTrapProject/Spectra")
?read.csv2
nightlife <- read.csv2("nightlife.txt")
View(nightlife)
View(nightlife)
nightlife <- read.csv2("nightlife.txt", skip=16, sep=" ")
View(nightlife)
nightlife <- read.csv2("nightlife.txt")
View(nightlife)
nightlife <- read.csv2("nightlife.txt", skip=16, sep=" ", header=FALSE)
View(nightlife)
nightlife <- read.csv2("nightlife.txt", skip=17, sep=" ", header=FALSE)
View(nightlife)
nightlife <- read.csv2("nightlife.txt")
View(nightlife)
nightlife <- read.csv2("nightlife.txt", header=FALSE)
View(nightlife)
nightlife <- read.csv2("nightlife.txt", header=FALSE, sep="\t")
View(nightlife)
?plot
plot(nightlife)
nightlife[0]
nightlife[V1]
nightlife[:V1]
nightlife[,V1]
nightlife["V1"]
nightlife <- read.csv2("nightlife.txt", header=FALSE, sep="\t")
View(nightlife)
plot(nightlife)
